<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:camel="http://camel.apache.org/schema/spring" xmlns:ctx="http://www.springframework.org/schema/context" xmlns:cxf="http://camel.apache.org/schema/cxf" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd        http://camel.apache.org/schema/spring        http://camel.apache.org/schema/spring/camel-spring-2.25.3.xsd  http://camel.apache.org/schema/cxf http://camel.apache.org/schema/cxf/camel-cxf-2.8.3.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
	<bean class="org.slf4j.LoggerFactory" factory-method="getLogger" id="rh1">
		<constructor-arg index="0" value="rh1" />
	</bean>
	<bean class="org.apache.camel.component.quartz2.QuartzComponent" id="quartz2" />
	<bean class="com.sodimac.esb.wkslicalcularcostos.QuickstartConfiguration" id="prop" />
	<bean class="com.sodimac.esb.wkslicalcularcostos.processor.RespuestaErrorProcessor" id="respuestaErrorProcessor" />

	<ctx:property-placeholder location="classpath:application.properties" />
	<bean class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close" id="dataSource">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
		<property name="url" value="${quickstart.jdbcConnection_Oracle}" />
		<property name="username" value="${quickstart.jdbcUserName_Oracle}" />
		<property name="password" value="${quickstart.jdbcPassword_Oracle}" />
	</bean>
	<camelContext id="SERVICE-CALCULARCOSTOS-API" streamCache="true" threadNamePattern="100" xmlns="http://camel.apache.org/schema/spring">
		<propertyPlaceholder id="properties" location="classpath:application.properties" />
		<threadPoolProfile defaultProfile="true" id="changedProfile" maxQueueSize="100" poolSize="1" />
		<redeliveryPolicyProfile id="redeliveryPolicy" logRetryAttempted="true" maximumRedeliveries="0" redeliveryDelay="10" retriesExhaustedLogLevel="WARN" />
		<onException id="CustomExceptionHandling" redeliveryPolicyRef="redeliveryPolicy" useOriginalMessage="true">
			<exception>com.sodimac.esb.wkslicalcularcostos.exceptions.ProcedureExcepcion</exception>
			<handled>
				<constant>true</constant>
			</handled>
			<log loggerRef="rh1" loggingLevel="ERROR" message="ERROR: ${camelId} || ${routeId} || ${id} || ${date:now:yyyy-MM-dd'T'HH:mm:ss:SSS} || ${exception.message}" />
			<log loggerRef="rh1" loggingLevel="DEBUG" message="ERROR: ${camelId} || ${routeId} || ${id} || ${date:now:yyyy-MM-dd'T'HH:mm:ss:SSS} || ${exception.stacktrace}" />
			<setHeader headerName="trazaerror">
				<simple>${exception.stacktrace}</simple>
			</setHeader>
			<setProperty propertyName="codigohttp">
				<simple>{{quickstart.codigoRespuesta_ErrorGeneral}}</simple>
			</setProperty>
			<setProperty propertyName="codigo">
				<simple>{{quickstart.codigo_ErrorProcedure}}</simple>
			</setProperty>
			<setProperty propertyName="descripcion">
				<simple>{{quickstart.descripcion_ErrorProcedure}}</simple>
			</setProperty>
			<bean method="process" ref="respuestaErrorProcessor" />
			<stop />
		</onException>
		<onException id="CustomExceptionHandling" redeliveryPolicyRef="redeliveryPolicy" useOriginalMessage="true">
			<exception>java.sql.SQLRecoverableException</exception>
			<exception>org.springframework.jdbc.CannotGetJdbcConnectionException</exception>
			<exception>org.springframework.jdbc.BadSqlGrammarException</exception>
			<handled>
				<constant>true</constant>
			</handled>
			<log loggerRef="rh1" loggingLevel="ERROR" message="ERROR: ${camelId} || ${routeId} || ${id} || ${date:now:yyyy-MM-dd'T'HH:mm:ss:SSS} || ${exception.message}" />
			<log loggerRef="rh1" loggingLevel="DEBUG" message="ERROR: ${camelId} || ${routeId} || ${id} || ${date:now:yyyy-MM-dd'T'HH:mm:ss:SSS} || ${exception.stacktrace}" />
			<setHeader headerName="trazaerror">
				<simple>${exception.stacktrace}</simple>
			</setHeader>
			<setProperty propertyName="codigohttp">
				<simple>{{quickstart.codigoRespuesta_ErrorGeneral}}</simple>
			</setProperty>
			<setProperty propertyName="codigo">
				<simple>{{quickstart.codigo_ErrorProveedor}}</simple>
			</setProperty>
			<setProperty propertyName="descripcion">
				<simple>{{quickstart.descripcion_ErrorProveedor}}</simple>
			</setProperty>
			<setProperty propertyName="codigoTimeout">
				<simple>{{quickstart.codigo_ErrorTimeOut}}</simple>
			</setProperty>
			<setProperty propertyName="descripcionTimeout">
				<simple>{{quickstart.descripcion_ErrorTimeOut}}</simple>
			</setProperty>
			<bean method="process" ref="respuestaErrorProcessor" />
			<stop />
		</onException>
		<onException id="CustomExceptionHandling" redeliveryPolicyRef="redeliveryPolicy" useOriginalMessage="true">
			<exception>java.lang.Exception</exception>
			<handled>
				<constant>true</constant>
			</handled>
			<log loggerRef="rh1" loggingLevel="ERROR" message="ERROR: ${camelId} || ${routeId} || ${id} || ${date:now:yyyy-MM-dd'T'HH:mm:ss:SSS} || ${exception.message}" />
			<log loggerRef="rh1" loggingLevel="DEBUG" message="ERROR: ${camelId} || ${routeId} || ${id} || ${date:now:yyyy-MM-dd'T'HH:mm:ss:SSS} || ${exception.stacktrace}" />
			<setHeader headerName="trazaerror">
				<simple>${exception.stacktrace}</simple>
			</setHeader>
			<setProperty propertyName="codigohttp">
				<simple>{{quickstart.codigoRespuesta_ErrorGeneral}}</simple>
			</setProperty>
			<setProperty propertyName="codigo">
				<simple>{{quickstart.codigo_ErrorInterno}}</simple>
			</setProperty>
			<setProperty propertyName="descripcion">
				<simple>{{quickstart.descripcion_ErrorInterno}}</simple>
			</setProperty>
			<bean method="process" ref="respuestaErrorProcessor" />
			<stop />
		</onException>
		<route id="CALCULARCOSTOS-ROUTE-MAIN">
			<from id="_from1" uri="quartz2://quartz2?cron={{quickstart.storedProcedureTime}}" />
			<setHeader headerName="P_INTERFAZ">
				<simple>FETCH_PERSON_HISTORY(OUT SYS_REFCURSOR)</simple>
			</setHeader>
			<to id="_to4" uri="sql-stored::#P_INTERFAZ?dataSource=#dataSource" />
			<!-- <camel:to uri="sql:select * from person_history"   />-->
			<log  loggerRef="rh1" message="FINALIZA RUTA (((${body})))" />
			<stop id="_stop1" />
			<to id="_to1" uri="bean-validator://x" />
			<removeHeaders id="_removeHeaders1" pattern="CamelHttp*" />
			<setHeader headerName="Content-Type" id="_setHeader1">
				<constant>application/json</constant>
			</setHeader>
			<toD id="_toD1" uri="direct:${header.operationName}" />
		</route>
		<route id="RT-GET-NOMBRE-PROYECTO">
			<from id="_from5" uri="direct:nombreProyecto" />
			<setBody id="_setBody1">
				<simple>{{camel.springboot.name}}</simple>
			</setBody>
		</route>
		<!-- ################################################################################################################################ -->

		<route id="TRANSFORM-DATA">
			<from id="_from3" uri="direct:crearIngreso" />
			<split id="_split1">
				<tokenize token="NORDEN_COMPRA" />
				<to id="_to3" uri="direct:b" />
			</split>
			
		</route>
		<route id="RT-RESPUESTA-CALCULAR-COSTOS">
			<from id="_from4" uri="direct:responseCrearIngreso" />
			<to id="_to6" uri="velocity:template/respuestaCrearIngreso.vm" />
			<log loggerRef="rh1" message="FINALZA RUTA (((${body})))" />
			<stop id="_stop2" />
		</route>
	</camelContext>
</beans>